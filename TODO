--Flower Catalog--

Requirements

  * Landing page showing the image,gif and the links.
  * Server to control the website.
  * Create new page for Abeliophyllum and Ageratum flower with requirements.
  * Create Guest book page that the guest can leave and read commands.
  * A watering Jar image on the landing page, which when clicked will hide for a second
  * A link to download the content as pdf on Abeliophyllum and Ageratum pages.

TODO

--DONE-- * Create folders and files for the website to begin.
            folders => public public/html public/css public/img
            files => public/html/index.html public/css/flowerCatalog.css      
--DONE-- * Create the UI for home page.
    flowerCatalogServer.js
--DONE-- * Create flower pages for Abeliophyllum & Ageratum.
--DONE-- * Give links between pages.
--DONE-- * Create UI for guest page.
--DONE-- * Hide the water jar for one second on click.
--DONE-- * Create a server for Flower Catalog website.
--DONE-- * Add lin to download PDF

--DONE-- * Add feature to view and submit comments

--DONE-- * Add time for commits

--DONE-- * Changed net module to http module

--DONE-- * Add a app class which deals with routing

--DONE-- * Add npm package
--DONE-- * Add eslint 

--DONE-- * Add redirection to guestBook.html after comment

* Write test for app using supertest module
  --DONE-- npm install mocha --save-dev
  --DONE-- npm install supertest --save-dev
  --DONE-- create test folder

--DONE-- * Add method not allowed function
--DONE-- * Create a file to store status codes.
* Move the commentInfo file in to a directory
--DONE-- * Parse the body when it is reading.

--DONE-- * Create the comment and comments class
